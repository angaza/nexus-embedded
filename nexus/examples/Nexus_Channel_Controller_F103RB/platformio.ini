; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[env]
platform = ststm32
board = nucleo_f103rb
framework = zephyr
monitor_speed = 115200

# Set strict warnings for files in the project `src` folder (don't apply these
# warnings to Zephyr or other included library code)
src_build_flags =
    -Werror
    -Wall
    -Wextra
    -Warray-bounds
    -Wlogical-op
    -Wformat-overflow
    -Wformat=2
    -Wstringop-overflow
    -Wundef
    -Wshadow
    -Wswitch-default
    -Wno-sign-compare
    -Wno-sign-conversion
    -Wno-unused-variable
    -Wno-unused-parameter

[env:channel_controller]
build_flags =
    -I lib/nexus
    -I lib/nexus/include
    -I lib/nexus/src
    -I lib/nexus/utils
    -I lib/nexus/oc
    -I lib/nexus/oc/include
    -I lib/nexus/oc/port
    -Wno-unknown-pragmas
    -Wl,-Map,mapfile.map
    # following options for puncover
    # to run puncover, run the following from the same directory as `platformio.ini`
    # `puncover --gcc_tools_base="/usr/bin/arm-none-eabi-" --elf_file .pio/build/channel_controller/firmware.elf
    #   --src_root src/ --build_dir .pio/build/channel_controller
    -ggdb
    -fdebug-prefix-map=/=

# Additional source files to build not included in `src_dir` with names
# that may different from their headers. Path is relative to `src` folder.
# (e.g. 'oc/api/oc_server_api.c' and 'oc/include/oc_api.h').
src_filter = +<*> +<../lib/nexus/utils> +<../lib/nexus/oc/api> +<../lib/nexus/oc/messaging/coap> +<../lib/nexus/oc/deps/tinycbor/src> +<../lib/nexus/oc/util>

extra_scripts =
    # Copy nexus library files to lib/nexus
    pre:prepare_nexus_library.py
    # overwrite user config in lib/nexus/include/user_config.h to be "channel controller" with 5 possible links
    pre:write_channel_controller_user_config.py
