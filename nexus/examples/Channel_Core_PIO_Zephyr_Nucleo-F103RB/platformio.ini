; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html


[env]

# Allows nexus library to be linked directly inline (no separate '.a' archive file)
# https://docs.platformio.org/en/latest/projectconf/section_env_library.html#lib-archive
lib_archive = no
platform = ststm32@10.0.1
board = nucleo_f103rb
framework = zephyr
monitor_speed = 115200

# Set strict warnings for files in the project `src` folder (don't apply these
# warnings to Zephyr or other included library code)
src_build_flags =
    -Werror
    -Wall
    -Wextra
    -Warray-bounds
    -Wlogical-op
    -Wformat-overflow
    -Wformat=2
    -Wstringop-overflow
    -Wundef
    -Wshadow
    -Wswitch-default
    -Wno-sign-compare
    -Wno-sign-conversion
    -Wno-unused-variable
    -Wno-unused-parameter

# Composable configs added to envs by PIO dynamic variables
# https://docs.platformio.org/en/latest/projectconf/dynamic_variables.html#projectconf-dynamic-vars
[common-extra]
build_flags =
    -I ../../
    -I ../../include
    -I ../../src
    -I ../../utils
    -I ../../oc
    -I ../../oc/api
    -I ../../oc/include
    -I ../../oc/messaging/coap
    -I ../../oc/port
    -I ../../oc/util
    -Wno-unknown-pragmas
    -Wl,-Map,mapfile.map
    # following options for puncover
    # to run puncover:
    # `puncover --gcc_tools_base="/usr/bin/arm-none-eabi-" \
    # --elf_file /your/local/path/to/this/project/Channel_Core_PIO_Zephyr_Nucleo-F103RB/.pio/build/nucleo_f103rb/firmware.elf`
    -ggdb
    -fdebug-prefix-map=/=

[env:nucleo_f103rb-keycode-only]
build_flags =
    ${common-extra.build_flags}
    -DKEYCODE_SUPPORTED_DEMO_BUILD_ENABLED

# Additional source files to build not included in `src_dir` with names
# that may different from their headers. Path is relative to `src` folder.
src_filter = +<*> +<../lib/nexus/utils>

# overwrite user config in nexus/include/user_config.h to be 'channel core only'
extra_scripts = pre:write_keycode_only_user_config.py

[env:nucleo_f103rb-channel-core-only]
# stable version with Zephyr @2.4.0
build_flags =
    ${common-extra.build_flags}
    -DCHANNEL_CORE_SUPPORTED_DEMO_BUILD_ENABLED

# Additional source files to build not included in `src_dir` with names
# that may different from their headers. Path is relative to `src` folder.
# (e.g. 'oc/api/oc_server_api.c' and 'oc/include/oc_api.h')
src_filter = +<*> +<../lib/nexus/utils> +<../lib/nexus/oc/api> +<../lib/nexus/oc/messaging/coap> +<../lib/nexus/oc/deps/tinycbor/src> +<../lib/nexus/oc/util>

# overwrite user config in nexus/include/user_config.h to be 'channel core only'
extra_scripts = pre:write_channel_only_user_config.py

[env:nucleo_f103rb-channel-single-link]
build_flags =
    ${common-extra.build_flags}
    -DKEYCODE_SUPPORTED_DEMO_BUILD_ENABLED
    -DCHANNEL_CORE_SUPPORTED_DEMO_BUILD_ENABLED

# Additional source files to build not included in `src_dir` with names
# that may different from their headers. Path is relative to `src` folder.
# (e.g. 'oc/api/oc_server_api.c' and 'oc/include/oc_api.h')
src_filter = +<*> +<../lib/nexus/utils> +<../lib/nexus/oc/api> +<../lib/nexus/oc/messaging/coap> +<../lib/nexus/oc/deps/tinycbor/src> +<../lib/nexus/oc/util>

# overwrite user config in nexus/include/user_config.h to support Nexus Channel security
extra_scripts = pre:write_channel_single_link_user_config.py
